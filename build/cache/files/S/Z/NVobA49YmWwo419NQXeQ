1704882232
waR3U4bTeM%3A6ebe669e109db783b550bec057b69fbf-39bf81998011e012c5a1202c8afc118d
s:74872:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"39bf81998011e012c5a1202c8afc118d";s:39:" phpDocumentor\Reflection\Php\File name";s:19:"DatabaseManager.php";s:39:" phpDocumentor\Reflection\Php\File path";s:33:"app/Libraries/DatabaseManager.php";s:41:" phpDocumentor\Reflection\Php\File source";s:22463:"<?php

namespace App\Libraries;

use Config\Database;
use Exception;

/**
 * DatabaseManager is a library made to simplify query builder especially to retrieve data and displays it to
 * Datatables with server side processing.
 * 
 * This library has five main methods from composing query, counting results, grouping query,
 * translate query, and prepare query to be executed.
 * 
 * @author Azvya Erstevan I.
 * @package KartasolvApp\Libraries
 */
class DatabaseManager extends Database
{
    /**
     * Prepare the db connection.
     * @var \CodeIgniter\Database\BaseConnection $db Database connection.
     */
    private $db;

    /**
     * Prepare builder variable.
     * @var mixed $builder Table to be connected.
     */
    private $builder;
    /**
     * Construct connection to the database.
     */
    public function __construct()
    {
        $this->db = $this->connect();
    }

    /**
     * Generate datatables query based on user input.
     * 
     * Before you could implement php data you have to provide Javascript and html function inside the
     * View file.
     * 
     * HTML Code Example:
     * ```html
     *  <table id="table"></table>
     * ```
     * 
     * And you have to provide Javascript function, you can either use separated files or implement this code inside
     * the html <script></script> Tag. Example:
     * 
     * ```javascript
     *  document.addEventListener('DOMContentLoaded', function() {
     *    // Create configuration
     *    config = {
     *        table_id: 'table',
     *        // Ajax server side config
     *        ajax: {
     *            url: baseUrl("konten/profil-karang-taruna/pengurus"),
     *            type: "GET",
     *            data: {
     *                orderable: ['selected_id', 'selected_name', 'selected_name2'],
     *                searchable: ['selected_id', 'selected_name', 'selected_name2']
     *            }
     *        },
     *        // Configure buttons
     *        defaultOrder: [2, 'asc'],
     *        buttons: {
     *            add: {
     *                url: baseUrl('ajax/url')
     *            },
     *            xlsx: true,
     *            delete: {
     *                url: baseUrl('ajax/url'),
     *                postData: postData()
     *            },
     *            manipulateSelected: {
     *                url: baseUrl('ajax/url'),
     *                text: '<i class="icon sample"></i>',
     *                title: 'Title Custom',
     *                postData: postData()
     *            },
     *            custom: {
     *                text: '<i class="icon sample"></i>',
     *                title: 'Title Custom',
     *                action: function() {
     *                    window.location.href = baseUrl('ajax/url/custom');
     *                }
     *            }
     *        },
     *        columns: [{
     *                title: "Nama",
     *                name: "selected_name",
     *                data: "selected_name",
     *                className: 'text-center text-lg-start',
     *                render: function(data, type, row) {
     *                    return `{row.selected_name}`;
     *                },
     *
     *            },
     *            {
     *                title: "Tipe",
     *                name: "selected_name2",
     *                data: "selected_name2",
     *                className: 'text-center',
     *                type: 'array',
     *                options: [{
     *                        value: '1',
     *                        text: 'Ketua'
     *                    },
     *                    {
     *                        value: '2',
     *                        text: 'Top Level'
     *                    },
     *                    {
     *                        value: '3',
     *                        text: 'Kegiatan Khusus'
     *                    },
     *                    {
     *                        value: '4',
     *                        text: 'Anggota'
     *                    },
     *
     *                ],
     *                render: function(data) {
     *                    switch (data) {
     *                        case '1':
     *                            type = 'Ketua'
     *                            className = 'bg-danger'
     *                            break;
     *                        case '2':
     *                            type = 'Top Level'
     *                            className = 'bg-warning text-dark'
     *                            break;
     *                        case '3':
     *                            type = 'Kabid'
     *                            className = 'bg-success'
     *                            break;
     *                        default:
     *                            type = 'Anggota'
     *                            className = 'bg-light text-dark'
     *                            break;
     *                    }
     *                    return `<span class="badge ${className}">${type}</span>`;
     *                }
     *            },
     *            {
     *                title: "Aksi",
     *                name: "unique_id",
     *                data: "unique_id",
     *                className: "text-center",
     *                render: function(data, type, row) {
     *                    return (
     *                        `<a href="sample/url/${unique_id}></a>`
     *                    );
     *                },
     *            },
     *        ],
     *    }
     *    createDatatable(config);
     *})
     * ```
     * 
     * @param mixed $condition Condition to be generated, for usage see Model Examples provided in this application.
     * ```php
     * public function getDatatable($condition)
     *   {
     *       $dbMan = new DatabaseManager;
     *       $query = [
     *           'result' => 'result',
     *           'table'  => 'table_name',
     *           'select' => ['selected_id', 'selected_name', 'selected_name2']
     *       ];
     *       $query += $dbMan->filterDatatables($condition);
     *       $query['orderBy'] .= ', selected_id ASC';
     *       $data = [
     *           'totalRows' => $dbMan->countAll($query),
     *           'result' => $dbMan->read($query),
     *           'searchable' => array_map(function ($e) {
     *               return $e . ":name";
     *           }, $condition['columnSearch'])
     *       ];
     *       return objectify($data);
     *  }
     * ```
     * @return mixed Formatted query.
     * @see https://datatables.net/ for instructions how to create server side processing Datatables.
     */
    public function filterDatatables($condition)
    {
        $d = null;
        if ($condition['order']) {
            $condition['order']['column']--;
            $order = $condition['orderable'][$condition['order']['column']] . ' ' . $condition['order']['dir'];
        }
        $d['orderBy'] = $order ?? $condition['orderable'][0] . ' ASC';
        $d['group'] = [];
        if ($condition['filter'] ?? false) {
            foreach ($condition['filter']['criteria'] as $criteria) {
                // @codeCoverageIgnoreStart
                if (!array_key_exists('data', $criteria) or !array_key_exists('condition', $criteria)) {
                    continue;
                }
                if (!in_array($criteria['origData'], $condition['columnSearch'])) {
                    continue;
                }
                // @codeCoverageIgnoreEnd
                $cdn = $criteria['condition'];
                $col = $criteria['origData'] ?? null;
                switch ($cdn) {
                    case 'null':
                        // @codeCoverageIgnoreStart
                        if ($criteria['type'] == 'date') {
                            if ($condition['filter']['logic'] == 'OR') {
                                array_push($d['group'], ['orWhere', [$col => null]]);
                            } else {
                                $subgroup = [];
                                array_push($subgroup, ['orWhere', [$col => null]]);
                                array_push($d['group'], ['subgroup', $subgroup]);
                            }
                        } else {
                            if ($condition['filter']['logic'] == 'OR') {
                                array_push($d['group'], ['orWhere', [$col => null]], ['orWhere', [$col => '']]);
                            } else {
                                $subgroup = [];
                                array_push($subgroup, ['orWhere', [$col => null]], ['orWhere', [$col => '']]);
                                array_push($d['group'], ['subgroup', $subgroup]);
                            }
                        }
                        break;
                        // @codeCoverageIgnoreEnd
                    case 'contains':
                        if (!array_key_exists('value', $criteria)) continue 2;
                        if ($condition['filter']['logic'] == 'OR') {
                            array_push($d['group'], ['orLike', [$col => $criteria['value1']]]);
                        } else {
                            array_push($d['group'], ['like', [$col => $criteria['value1']]]);
                        }
                        break;
                    default:
                        if (!array_key_exists('value', $criteria)) continue 2;
                        if ($criteria['type'] == 'date') {
                            switch ($cdn) {
                                case '=':
                                    if ($condition['filter']['logic'] == 'OR') {
                                        // @codeCoverageIgnoreStart
                                        array_push($d['group'], ['orLike', [$col => $criteria['value1']]]);
                                        // @codeCoverageIgnoreEnd
                                    } else {
                                        array_push($d['group'], ['like', [$col => $criteria['value1']]]);
                                    }
                                    break;
                                case '>':
                                    if ($condition['filter']['logic'] == 'OR') {
                                        // @codeCoverageIgnoreStart
                                        array_push($d['group'], ['orWhere', [$col . " >= " => $criteria['value1']]]);
                                        // @codeCoverageIgnoreEnd
                                    } else {
                                        array_push($d['group'], ['where', [$col . " >= " => $criteria['value1']]]);
                                    }
                                    break;
                                case '<':
                                    if ($condition['filter']['logic'] == 'OR') {
                                        // @codeCoverageIgnoreStart
                                        array_push($d['group'], ['orWhere', [$col . " <= " => $criteria['value1']]]);
                                        // @codeCoverageIgnoreEnd
                                    } else {
                                        array_push($d['group'], ['where', [$col . " <= " => $criteria['value1']]]);
                                    }
                                    break;
                            }
                        } else {
                            if ($condition['filter']['logic'] == 'OR') {
                                array_push($d['group'], ['orWhere', [$col . " {$cdn} " => $criteria['value1']]]);
                            } else {
                                array_push($d['group'], ['where', [$col . " {$cdn} " => $criteria['value1']]]);
                            }
                        }

                        break;
                }
            }
        }
        if ($condition['search']) {
            $subgroup = [];
            foreach ($condition['columnSearch'] as $column) {
                array_push($subgroup, ['orLike', [$column => $condition['search']]]);
            }
            array_push($d['group'], ['subgroup', $subgroup]);
        }
        $d['query'] = [
            'orderBy' => $d['orderBy'],

        ];
        if ($condition['limit'] >= 0) {
            $d['query']['limit'] = $condition['limit'];
            $d['query']['offset'] = $condition['offset'];
        }
        if (array_key_exists('group', $d)) {
            $d['query'] += ['group' => $d['group']];
        }
        return $d['query'];
    }

    /**
     * Count queried result.
     * @param mixed $data Query array.
     * @param bool $retrieve_all Retrieve everything includin deleted_at is not null data.
     * @return int Row count.
     */
    public function countAll($data, $retrieve_all = false)
    {
        if (!$retrieve_all) {
            if (array_key_exists('where', $data)) {
                if (!is_array($data['where'])) {
                    // @codeCoverageIgnoreStart
                    throw new Exception('Where clause must be an associative array!');
                    // @codeCoverageIgnoreEnd
                }
            }
            if (array_key_exists('join', $data)) {
                $data['where'][$data['table'] . '.deleted_at'] = null;
                foreach ($data['join'] as $key) {
                    $data['where'][($key[3] ?? $key[0]) . '.deleted_at'] = null;
                }
            } else {
                $data['where']['deleted_at'] = null;
            }
        }

        $this->builder = $this->db->table($data['table']);
        // @codeCoverageIgnoreStart
        if (array_key_exists('groupBy', $data)) {
            $this->builder->groupBy($data['groupBy']);
        }
        // @codeCoverageIgnoreEnd

        if (array_key_exists('group', $data)) {
            if ($data['group'] != null) {
                $this->makeGroup($data);
            }
        }
        if (array_key_exists('where', $data)) {
            if (!is_array($data['where'])) {
                // @codeCoverageIgnoreStart
                throw new \Exception('Where clause must be an associative array!');
                // @codeCoverageIgnoreEnd
            }
            $this->builder->where($data['where']);
        }
        // @codeCoverageIgnoreStart
        if (array_key_exists('like', $data)) {
            if (!is_array($data['like'])) {
                throw new \Exception('Like clause must be an associative array!');
            }
            $this->builder->like($data['like']);
        }

        if (array_key_exists('orLike', $data)) {
            if (!is_array($data['orLike'])) {
                throw new \Exception('Or like clause must be an associative array!');
            }
            $this->builder->orLike($data['orLike'][0]);
        }
        // @codeCoverageIgnoreEnd

        if (array_key_exists('select', $data)) {
            $this->builder->select($data['select']);
        } else {
            // @codeCoverageIgnoreStart
            $this->builder->select('*');
            // @codeCoverageIgnoreEnd
        }

        if (array_key_exists('join', $data)) {
            if (!is_array($data['join'] ?? [])) {
                // @codeCoverageIgnoreStart
                throw new \Exception('Join parameter must be an associative array!');
                // @codeCoverageIgnoreEnd
            }

            foreach ($data['join'] as $key) {
                if ($key[3] ?? null) {
                    // @codeCoverageIgnoreStart
                    $key[0] .= ' AS ' . $key[3];
                    // @codeCoverageIgnoreEnd
                }
                $this->builder->join($key[0], $key[1], $key[2] ?? null);
            }
        }
        $string = $this->builder->getCompiledSelect();
        $this->db->query($string)->getResult();
        return (int)$this->db->query('SELECT FOUND_ROWS() as "rows"')->getRow()->rows;
    }

    /**
     * Read database function with QueryBuilder.
     * 
     *
     * Simple read query:
     * ```php
     * $query = [
     *      'result' => 'result',
     *      'table'  => 'sample_table'
     * ];
     * $this->lib_db->read($query);
     * ```
     * Simple where query:
     * ```php
     * $query = [
     *      'result' => 'result',
     *      'table'  => 'sample_table',
     *      'where'  => ['id' => '1', 'email' => 'good@gmail.com']
     * ];
     * $this->lib_db->read($query);
     * ```
     * Limit and join read query:
     * ```php
     * $query = [
     *      'result' => 'result',
     *      'table'  => 'sample_table',
     *      'join'   => [
     *          ['sample_table_2','sample_table.id = sample_table_2.id_sample', 'right outer'],
     *          ['sample_table_3','sample_table_2.id_sample = sample_table_3.id_sample_2']
     *      ],
     *      'limit'  => 3
     * ];
     * $this->lib_db->read($query);
     * ```
     * @param mixed $data Array query data.
     * @param bool $retrieve_all Retrieve everything includin deleted_at is not null data.
     * @return mixed Queried result.
     */
    public function read($data, $retrieveAll = false)
    {
        $this->builder = $this->db->table($data['table']);
        if (!$retrieveAll) {
            if (array_key_exists('where', $data)) {
                if (!is_array($data['where'])) {
                    // @codeCoverageIgnoreStart
                    throw new Exception('Where clause must be an associative array!');
                    // @codeCoverageIgnoreEnd
                }
            }
            if (array_key_exists('join', $data)) {
                $data['where'][$data['table'] . '.deleted_at'] = null;
                foreach ($data['join'] as $key) {
                    $data['where'][($key[3] ?? $key[0]) . '.deleted_at'] = null;
                }
            } else {
                $data['where']['deleted_at'] = null;
            }
        }

        if (array_key_exists('select', $data)) {
            $this->builder->select($data['select']);
        } else {
            // @codeCoverageIgnoreStart
            $this->builder->select('*');
            // @codeCoverageIgnoreEnd
        }

        if (array_key_exists('where', $data)) {
            if (!is_array($data['where'])) {
                // @codeCoverageIgnoreStart
                throw new \Exception('Where clause must be an associative array!');
                // @codeCoverageIgnoreEnd
            }
            $this->builder->where($data['where']);
        }

        if (array_key_exists('join', $data)) {
            if (!is_array($data['join'] ?? [])) {
                // @codeCoverageIgnoreStart
                throw new \Exception('Join parameter must be an associative array!');
                // @codeCoverageIgnoreEnd
            }
            foreach ($data['join'] as $key) {
                if ($key[3] ?? null) {
                    // @codeCoverageIgnoreStart
                    $key[0] .= ' AS ' . $key[3];
                    // @codeCoverageIgnoreEnd
                }
                $this->builder->join($key[0], $key[1], $key[2] ?? null);
            }
        }
        // @codeCoverageIgnoreStart
        if (array_key_exists('like', $data)) {
            if (!is_array($data['like'])) {
                throw new \Exception('Like clause must be an associative array!');
            }
            $this->builder->like($data['like']);
        }

        if (array_key_exists('orLike', $data)) {
            if (!is_array($data['orLike'])) {
                throw new \Exception('Or like clause must be an associative array!');
            }
            $this->builder->orLike($data['orLike'][0]);
        }
        // @codeCoverageIgnoreEnd

        if (array_key_exists('orderBy', $data)) {
            $this->builder->orderBy($data['orderBy']);
        }

        // @codeCoverageIgnoreStart
        if (array_key_exists('groupBy', $data)) {
            $this->builder->groupBy($data['groupBy']);
        }
        // @codeCoverageIgnoreEnd

        if (array_key_exists('group', $data)) {
            if ($data['group'] != null) {
                $this->makeGroup($data);
            }
        }

        if (array_key_exists('limit', $data)) {
            if (array_key_exists('offset', $data)) {
                $this->builder->limit($data['limit'], $data['offset']);
            } else {
                // @codeCoverageIgnoreStart
                $this->builder->limit($data['limit']);
                // @codeCoverageIgnoreEnd
            }
        }

        if (array_key_exists('result', $data)) {
            $result = 'get' . ucfirst($data['result']);
            $data = $this->builder->get()->$result();
        } else {
            // @codeCoverageIgnoreStart
            $data = $this->builder->get();
            // @codeCoverageIgnoreEnd
        }

        return filterOutput($data);
    }

    /**
     * Group Queries.
     * @param mixed $data Query to be grouped.
     * @return void Nothing to return, just sets the builder to be grouped.
     */
    public function makeGroup($data)
    {
        $this->builder->groupStart('', $data[1]['grouptype'] ?? $data['group']['grouptype'] ?? 'AND ');
        foreach ($data[1] ?? $data['group'] as $key) {
            if ($key[0] == 'where') {
                $this->builder->where($key[1]);
            } else if ($key[0] == 'like') {
                $this->builder->like($key[1], false, $key[2] ?? 'both');
            } else if ($key[0] == 'orLike') {
                $this->builder->orLike($key[1], false, $key[2] ?? 'both');
            } else if ($key[0] == 'orWhere') {
                $this->builder->orWhere($key[1]);
            } else if ($key[0] == 'subgroup') {
                $this->makeGroup($key);
            }
        }
        $this->builder->groupEnd();
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:14:"\App\Libraries";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:14:"\App\Libraries";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"Libraries";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:30:"\App\Libraries\DatabaseManager";O:35:"phpDocumentor\Reflection\Php\Class_":13:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:30:"\App\Libraries\DatabaseManager";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"DatabaseManager";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:146:"DatabaseManager is a library made to simplify query builder especially to retrieve data and displays it to
Datatables with server side processing.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:141:"This library has five main methods from composing query, counting results, grouping query,
translate query, and prepare query to be executed.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:17:"Azvya Erstevan I.";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:0:"";s:14:" * description";N;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:22:"KartasolvApp\Libraries";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:13:"App\Libraries";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:2:{s:8:"Database";s:15:"Config\Database";s:9:"Exception";s:9:"Exception";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:16:"\Config\Database";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"Database";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:2:{s:35:"\App\Libraries\DatabaseManager::$db";O:37:"phpDocumentor\Reflection\Php\Property":11:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:35:"\App\Libraries\DatabaseManager::$db";s:36:" phpDocumentor\Reflection\Fqsen name";s:2:"db";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:26:"Prepare the db connection.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:15:" * variableName";s:2:"db";s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:36:"\CodeIgniter\Database\BaseConnection";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"BaseConnection";}}s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:20:"Database connection.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:35;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";N;s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:24;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Property endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:24;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}s:40:"\App\Libraries\DatabaseManager::$builder";O:37:"phpDocumentor\Reflection\Php\Property":11:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:40:"\App\Libraries\DatabaseManager::$builder";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"builder";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:25:"Prepare builder variable.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:15:" * variableName";s:7:"builder";s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:22:"Table to be connected.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:35;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";N;s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:30;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Property endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:30;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:5:{s:45:"\App\Libraries\DatabaseManager::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:37:"Construct connection to the database.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:35;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:45:"\App\Libraries\DatabaseManager::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:34;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:37;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:50:"\App\Libraries\DatabaseManager::filterDatatables()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:46:"Generate datatables query based on user input.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:3827:"Before you could implement php data you have to provide Javascript and html function inside the
View file.

HTML Code Example:
```html
 <table id="table"></table>
```

And you have to provide Javascript function, you can either use separated files or implement this code inside
the html <script></script> Tag. Example:

```javascript
 document.addEventListener('DOMContentLoaded', function() {
   // Create configuration
   config = {
       table_id: 'table',
       // Ajax server side config
       ajax: {
           url: baseUrl("konten/profil-karang-taruna/pengurus"),
           type: "GET",
           data: {
               orderable: ['selected_id', 'selected_name', 'selected_name2'],
               searchable: ['selected_id', 'selected_name', 'selected_name2']
           }
       },
       // Configure buttons
       defaultOrder: [2, 'asc'],
       buttons: {
           add: {
               url: baseUrl('ajax/url')
           },
           xlsx: true,
           delete: {
               url: baseUrl('ajax/url'),
               postData: postData()
           },
           manipulateSelected: {
               url: baseUrl('ajax/url'),
               text: '<i class="icon sample"></i>',
               title: 'Title Custom',
               postData: postData()
           },
           custom: {
               text: '<i class="icon sample"></i>',
               title: 'Title Custom',
               action: function() {
                   window.location.href = baseUrl('ajax/url/custom');
               }
           }
       },
       columns: [{
               title: "Nama",
               name: "selected_name",
               data: "selected_name",
               className: 'text-center text-lg-start',
               render: function(data, type, row) {
                   return `{row.selected_name}`;
               },

           },
           {
               title: "Tipe",
               name: "selected_name2",
               data: "selected_name2",
               className: 'text-center',
               type: 'array',
               options: [{
                       value: '1',
                       text: 'Ketua'
                   },
                   {
                       value: '2',
                       text: 'Top Level'
                   },
                   {
                       value: '3',
                       text: 'Kegiatan Khusus'
                   },
                   {
                       value: '4',
                       text: 'Anggota'
                   },

               ],
               render: function(data) {
                   switch (data) {
                       case '1':
                           type = 'Ketua'
                           className = 'bg-danger'
                           break;
                       case '2':
                           type = 'Top Level'
                           className = 'bg-warning text-dark'
                           break;
                       case '3':
                           type = 'Kabid'
                           className = 'bg-success'
                           break;
                       default:
                           type = 'Anggota'
                           className = 'bg-light text-dark'
                           break;
                   }
                   return `<span class="badge ${className}">${type}</span>`;
               }
           },
           {
               title: "Aksi",
               name: "unique_id",
               data: "unique_id",
               className: "text-center",
               render: function(data, type, row) {
                   return (
                       `<a href="sample/url/${unique_id}></a>`
                   );
               },
           },
       ],
   }
   createDatatable(config);
})
```";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:9:"condition";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:728:"Condition to be generated, for usage see Model Examples provided in this application.
```php
public function getDatatable($condition)
  {
      $dbMan = new DatabaseManager;
      $query = [
          'result' => 'result',
          'table'  => 'table_name',
          'select' => ['selected_id', 'selected_name', 'selected_name2']
      ];
      $query += $dbMan->filterDatatables($condition);
      $query['orderBy'] .= ', selected_id ASC';
      $data = [
          'totalRows' => $dbMan->countAll($query),
          'result' => $dbMan->read($query),
          'searchable' => array_map(function ($e) {
              return $e . ":name";
          }, $condition['columnSearch'])
      ];
      return objectify($data);
 }
```";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:16:"Formatted query.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:9:" * refers";O:52:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Url":1:{s:57:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Url uri";s:23:"https://datatables.net/";}s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:65:"for instructions how to create server side processing Datatables.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:35;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:50:"\App\Libraries\DatabaseManager::filterDatatables()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"filterDatatables";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:9:"condition";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:190;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:304;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:42:"\App\Libraries\DatabaseManager::countAll()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:21:"Count queried result.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:4:"data";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:12:"Query array.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:12:"retrieve_all";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Boolean":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:57:"Retrieve everything includin deleted_at is not null data.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:10:"Row count.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:35;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:42:"\App\Libraries\DatabaseManager::countAll()";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"countAll";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"data";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:12:"retrieve_all";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";s:5:"false";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:312;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:395;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:38:"\App\Libraries\DatabaseManager::read()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:41:"Read database function with QueryBuilder.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:685:"Simple read query:
```php
$query = [
     'result' => 'result',
     'table'  => 'sample_table'
];
$this->lib_db->read($query);
```
Simple where query:
```php
$query = [
     'result' => 'result',
     'table'  => 'sample_table',
     'where'  => ['id' => '1', 'email' => 'good@gmail.com']
];
$this->lib_db->read($query);
```
Limit and join read query:
```php
$query = [
     'result' => 'result',
     'table'  => 'sample_table',
     'join'   => [
         ['sample_table_2','sample_table.id = sample_table_2.id_sample', 'right outer'],
         ['sample_table_3','sample_table_2.id_sample = sample_table_3.id_sample_2']
     ],
     'limit'  => 3
];
$this->lib_db->read($query);
```";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:4:"data";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:17:"Array query data.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:12:"retrieve_all";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Boolean":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:57:"Retrieve everything includin deleted_at is not null data.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:15:"Queried result.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:35;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:38:"\App\Libraries\DatabaseManager::read()";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"read";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"data";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:11:"retrieveAll";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";s:5:"false";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:435;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:540;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:43:"\App\Libraries\DatabaseManager::makeGroup()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:14:"Group Queries.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:4:"data";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:20:"Query to be grouped.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:55:"Nothing to return, just sets the builder to be grouped.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:35;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:43:"\App\Libraries\DatabaseManager::makeGroup()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"makeGroup";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"data";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:547;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:564;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:18;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:565;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";